; ################################
;     Generators
; ################################

; Base generator
[balance / generator]

; Base output EU multiplier (Default: 1.0)
outputMultiplier = 1.0

; Base fixed output EU (Default: 0.0)
; value lower or equal to zero means to do not use fixed energy output
outputFixed = 0.0

; Kinetic generator
[balance / generator / kinetic]

; Kinetic generator output EU multiplier (Default: 1.0)
outputMultiplier = 1.0

; Kinetic generator fixed output EU (Default: 0.0)
; value lower or equal to zero means to do not use fixed energy output
outputFixed = 0.0

; Kinetic generator EU storage capacity (Default: 200000)
maxStorage = 200000

; Kinetic generator gui tick-rate (Default: 20)
guiTickrate = 20

; Stirling generator
[balance / generator / stirling]

; Stirling generator output EU multiplier (Default: 1.0)
outputMultiplier = 1.0

; Stirling generator fixed output EU (Default: 0.0)
; value lower or equal to zero means to do not use fixed energy output
outputFixed = 0.0

; Stirling generator EU storage capacity (Default: 30000)
maxStorage = 30000

; Geo-thermal generator
[balance / generator / geothermal]

; Geo-thermal generator output EU multiplier (Default: 1.0)
outputMultiplier = 1.0

; Geo-thermal generator fixed output EU (Default: 0.0)
; value lower or equal to zero means to do not use fixed energy output
outputFixed = 0.0

; Geo-thermal generator EU storage capacity (Default: 30000)
maxStorage = 24000

; Geo-thermal generator lava storage capacity (Default: 30000)
tankSize = 8000

; Semi-fluid generator
[balance / generator / semiFluid]

; Semi-fluid generator output EU multiplier (Default: 1.0)
outputMultiplier = 1.0

; Semi-fluid generator fixed output EU (Default: 0.0)
; value lower or equal to zero means to do not use fixed energy output
outputFixed = 0.0

; Semi-fluid generator EU storage capacity (Default: 32000)
maxStorage = 32000

; Semi-fluid generator lava storage capacity (Default: 10000)
tankSize = 10000


; **************************************************
;     Machines
; **************************************************

; Liquid Heat Exchanger
[balance / liquidHeatExchanger]

; Liquid Heat Exchanger maximum heat exchange(s) per tick
maxHeatExchangePerTick = 100

; Liquid Heat Exchanger input liquid tank capacity (Default: 2000)
inputTankSize = 2000

; Liquid Heat Exchanger output liquid tank capacity (Default: 2000)
outputTankSize = 2000

; Steam generator
; Note: hu_need = baseHUNeed + Math.round(pressureValve / huNeedRatio * huNeedMultiplier)
[balance / steamGenerator]

; Steam generator maximum requested HU when heating up (Default: 1200)
maxHeatupHU = 1200

; Steam generator base HU need (Default: 100)
huNeedBase = 100

; Steam generator HU need ratio (Default: 220.0)
huNeedRatio = 220.0

; Steam generator HU need multiplier (Default: 100.0)
huNeedMultiplier = 100.0

; Nuclear reactor
[balance / nuclearReactor]

; Nuclear reactor coolant tank capacity (Default: 10000)
inputTankSize = 10000

; Nuclear reactor hot-coolant tank capacity (Default: 10000)
outputTankSize = 10000

; Nuclear reactor gui tick-rate (Default: 20)
tickrate = 20

; Recycler
[balance / recycler]

; Recycler recycle chance (Default: 8)
; lower value = better chance
recycleChance = 8

; Recycler operation length (Default: 45)
; lower value = operation finished faster
operationLength = 45

; Blast furnace
[balance / blastFurnace]

; Blast furnace maximum operation length (Default: 6000)
; lower value = operation finished faster
maxprogress = 6000

; Solar distiller
[balance / solarDistiller]

; Solar distiller base operation tick-rate (Default: 72)
; lower value = operation finished faster
defaultTickrate = 72

; Solar distiller operation tick-rate in hot biomes (such as Desert) (Default: 36)
; lower value = operation finished faster
hotBiomeTickrate = 36

; Solar distiller operation tick-rate in cold biomes (such as Ice Plains) (Default: 144)
; lower value = operation finished faster
coldBiomeTickrate = 144

; Condenser
[balance / condenser]

; Condenser passive cooling amount (Default: 100)
passiveCooling = 100

; Condenser active cooling amount per vent (Default: 100)
activeCoolingPerVent = 100

; Advanced miner
[balance / advMiner]

; Advanced miner tick-rate (Default: 20)
workTick = 20

; Crop harvester
[balance / cropHarvester]

; Crop harvester scan horizontal(x, z) range (Default: 5)
scanH = 5

; Crop harvester scan vertical(y) range (Default: 1)
scanV = 1

; Cropmatron
[balance / cropmatron]

; Cropmatron scan horizontal(x, z) range (Default: 5)
scanH = 5

; Cropmatron scan vertical(y) range (Default: 1)
scanV = 1

; Induction
[balance / induction]

; Induction operation length (Default: 4000)
operationLength = 4000

; Fermenter
[balance / fermenter]

; Fermenter maximum heat request amount per tick (Default: 100)
heatRequest = 100

; Fermenter output tank capacity (Default: 2000)
outputTankSize = 2000

[balance / generic]

; Canner operation length (Default: 200)
; lower value = operation finished faster
cannerOperationLength = 200

; Compressor operation length (Default: 300)
; lower value = operation finished faster
compressorOperationLength = 300

; Electric furnace operation length (Default: 100)
; lower value = operation finished faster
electricFurnaceOperationLength = 100

; Extractor operation length (Default: 300)
; lower value = operation finished faster
extractorOperationLength = 300

; Fluid bottler operation length (Default: 100)
; lower value = operation finished faster
fluidBottlerOperationLength = 100

; Iron furnace operation length (Default: 160)
; lower value = operation finished faster
ironFurnaceOperationLength = 160

; Macerator operation length (Default: 300)
; lower value = operation finished faster
maceratorOperationLength = 300

; Metal former operation length (Default: 200)
; lower value = operation finished faster
metalFormerOperationLength = 200

; Ore washer operation length (Default: 500)
; lower value = operation finished faster
oreWasherOperationLength = 500

; Pump operation length (Default: 20)
; lower value = operation finished faster
pumpOperationLength = 20

; Solid canner operation length (Default: 200)
; lower value = operation finished faster
solidCannerOperationLength = 200


; ################################
;     Upgrades
; ################################

; Overclock upgrade
[balance / upgrade / overclock]

; Process time multiplier (Default: 0.7)
; lower value = operation finished faster
processTimeMultiplier = 0.7

; Energy demand multiplier (Default: 1.6)
; greater value = demands more EUs
energyDemandMultiplier = 1.6

; Energy storage upgrade
[balance / upgrade / energyStorage]

; Extra energy storage capacity increment (Default: 10000)
extraEnergyStorage = 10000

; Nano saber
[balance / tool / nanosaber]

; Nano saber block break speed when turned on (Default: 4.0)
digSpeed = 4.0

; Mining laser
[balance / tool / miningLaser]

; Mining laser power multiplier (Default: 1.0)
; greater value = count of mined blocks by a laser shot is increased
powerMultiplier = 1.0

; Electric Item
[balance / electricItem]

; Ignore energy transfer limit when charging electric item(s) (Default: false)
ignoreChargeTransferLimit = false

; Ignore energy transfer limit when discharging electric item(s) (Default: false)
ignoreDischargeTransferLimit = false

; Crop
[balance / crop / humidity]

; Crop humidity biome bonus
; true = Bonus amount affected by biome
; false = Bonus amount fixed to 10
; (Default: true)
biomeBonusCheck = true

; Crop humidity farmland wetness bonus
; true = Only give bonus when the farmland is wet
; false = Always give bonus
; (Default: true)
farmlandWetnessBonusCheck = true

[balance / crop / nutrients]

; Crop nutrients biome bonus
; true = Bonus amount affected by biome
; false = Bonus amount fixed to 10
; (Default: true)
biomeBonusCheck = true

; Crop nutrients below dirt bonus
; true = Bonus amount affected by count of dirt block(s) below the crop
; false = Bonus amount fixed to 3
; (Default: true)
belowDirtBonusCheck = true

[balance / crop / airQuality]

; Crop air quality height bonus
; true = Bonus amount affected by y coord of crop
; false = Bonus amount fixed to 4
; Note: bonus = ((yCoord - 64) / 15).clamp(0, 4)
; (Default: true)
heightBonusCheck = true

; Crop air quality freshness bonus
; true = Bonus amount affected by nearby blocks
; false = Bonus amount fixed to 9
; Note:
;   fresh = 9
;   for(int x = this.xCoord - 1; x <= xCoord + 1 && fresh > 0; ++x)
;       for(int z = this.zCoord - 1; z <= zCoord + 1 && fresh > 0; ++z)
;           if (world.isBlockNormalCubeDefault(x, yCoord, z, false)
;               || world.getTileEntity(x, yCoord, z) instanceof TileEntityCrop)
;                      --fresh
;   bonus += fresh / 2
; (Default: true)
freshnessBonusCheck = true

; Crop air quality see-the-sky bonus
; true = Bonus amount affected by sky availability
; false = Bonus amount fixed to 2
; (Default: true)
canSeeTheSkyBonusCheck = true

[balance / block / foam]

; Construction Foam construct chance
; Note: blockLightValue * 6 >= Random.nextInt(tickChance)
; (Default: 1000)
tickChance = 1000

; Construction Foam tick rate (Default: 500)
tickRate = 500

[balance / block / reinforcedFoam]

; Reinforced Construction Foam construct chance
; Note: blockLightValue * 6 >= Random.nextInt(tickChance)
; (Default: 1000)
tickChance = 1000

; Reinforced Construction Foam tick rate (Default: 1000)
tickRate = 1000

[balance / wind]

; Default wind strength multiplier (Default: 2.4)
defaultMultiplier = 2.4

; Wind strength multiplier when raining (Default: 1.25)
rainMultiplier = 1.25

; Wind strength multiplier when storming (= thundering) (Default: 1.5)
stormMultiplier = 1.5

[balance / reactor / vent]

; (Default: 1000)
heatStorage = 1000

; (Default: 6)
selfVent = 6

; (Default: 0)
reactorVent = 0

[balance / reactor / ventCore]

; (Default: 1000)
heatStorage = 1000

; (Default: 5)
selfVent = 5

; (Default: 5)
reactorVent = 5

[balance / reactor / ventGold]

; (Default: 1000)
heatStorage = 1000

; (Default: 20)
selfVent = 20

; (Default: 36)
reactorVent = 36

[balance / reactor / ventSpread]

; (Default: 4)
sideVent = 4

[balance / reactor / ventDiamond]

; (Default: 1000)
heatStorage = 1000

; (Default: 12)
selfVent = 12

; (Default: 0)
reactorVent = 0

[balance / reactor / heatSwitch]

; (Default: 2500)
heatStorage = 2500

; (Default: 12)
switchSide = 12

; (Default: 4)
switchReactor = 4

[balance / reactor / heatSwitchCore]

; (Default: 5000)
heatStorage = 5000

; (Default: 0)
switchSide = 0

; (Default: 72)
switchReactor = 72

[balance / reactor / heatSwitchSpread]

; (Default: 5000)
heatStorage = 5000

; (Default: 36)
switchSide = 36

; (Default: 0)
switchReactor = 0

[balance / reactor / heatSwitchDiamond]

; (Default: 10000)
heatStorage = 10000

; (Default: 24)
switchSide = 24

; (Default: 8)
switchReactor = 8
